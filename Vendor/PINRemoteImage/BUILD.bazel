
load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap",
  "umbrella_header"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "PINRemoteImage_package_hdrs",
  srcs = [
    "PINRemoteImage_direct_hdrs",
    "Core_direct_hdrs",
    "iOS_direct_hdrs",
    "OSX_direct_hdrs",
    "tvOS_direct_hdrs",
    "WebP_direct_hdrs",
    "PINCache_direct_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PINRemoteImage_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PINRemoteImage_public_hdrs",
  srcs = [
    ":PINCache_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PINRemoteImage_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ) + [
    ":PINCache_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "PINRemoteImage_hmap",
  namespace = "PINRemoteImage",
  hdrs = [
    "PINRemoteImage_package_hdrs",
    ":PINRemoteImage_hdrs"
  ],
  deps = [
    ":PINCache_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "PINRemoteImage_includes",
  include = [
    "Vendor/PINRemoteImage/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "PINRemoteImage",
  enable_modules = 1,
  hdrs = [
    ":PINRemoteImage_hdrs"
  ],
  pch = "pod_support/Headers/Private/PINRemoteImage-prefix.pch",
  deps = [
    ":PINCache",
    ":PINRemoteImage_includes"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/PINRemoteImage/pod_support/Headers/Public/PINRemoteImage/"
  ] + [
    "-fmodule-name=PINRemoteImage",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "PINRemoteImage_acknowledgement",
  deps = [],
  value = "//Vendor/PINRemoteImage/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Core_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ] + glob(
      [
        "Source/Classes/**/*.h"
      ],
      exclude = [
        "Source/Classes/PINCache/*.h",
        "Source/Classes/include/PINCache+PINRemoteImageCaching.h"
      ]
    )
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_public_hdrs",
  srcs = glob(
    [
      "Source/Classes/**/*.h"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ] + glob(
      [
        "Source/Classes/**/*.h"
      ],
      exclude = [
        "Source/Classes/PINCache/*.h",
        "Source/Classes/include/PINCache+PINRemoteImageCaching.h"
      ]
    )
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_union_hdrs",
  srcs = [
    "Core_hdrs",
    "PINRemoteImage_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Core_hmap",
  namespace = "PINRemoteImage",
  hdrs = [
    "PINRemoteImage_package_hdrs",
    ":Core_union_hdrs"
  ],
  deps = [
    "//Vendor/PINCache:PINCache",
    "//Vendor/PINOperation:PINOperation"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Core_includes",
  include = [
    "Vendor/PINRemoteImage/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "Core",
  enable_modules = 1,
  srcs = glob(
    [
      "Source/Classes/**/*.m"
    ],
    exclude = [
      "Source/Classes/PINCache/*.m",
      "Source/Classes/PINCache/*.m"
    ]
  ),
  hdrs = [
    ":Core_hdrs"
  ],
  pch = "pod_support/Headers/Private/PINRemoteImage-prefix.pch",
  sdk_frameworks = [
    "ImageIO",
    "Accelerate"
  ],
  deps = [
    "//Vendor/PINCache:PINCache",
    "//Vendor/PINOperation:PINOperation",
    ":Core_includes"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/PINRemoteImage/pod_support/Headers/Public/PINRemoteImage/"
  ] + [
    "-fmodule-name=PINRemoteImage",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Core_acknowledgement",
  deps = [
    "//Vendor/PINCache:PINCache_acknowledgement",
    "//Vendor/PINOperation:PINOperation_acknowledgement"
  ],
  value = "//Vendor/PINRemoteImage/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "iOS_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "iOS_public_hdrs",
  srcs = [
    ":Core_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "iOS_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "iOS_union_hdrs",
  srcs = [
    "iOS_hdrs",
    "PINRemoteImage_hdrs",
    ":Core_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "iOS_hmap",
  namespace = "PINRemoteImage",
  hdrs = [
    "PINRemoteImage_package_hdrs",
    ":iOS_union_hdrs"
  ],
  deps = [
    ":Core_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "iOS_includes",
  include = [
    "Vendor/PINRemoteImage/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "iOS",
  enable_modules = 1,
  hdrs = [
    ":iOS_hdrs"
  ],
  pch = "pod_support/Headers/Private/PINRemoteImage-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core",
    ":iOS_includes"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/PINRemoteImage/pod_support/Headers/Public/PINRemoteImage/"
  ] + [
    "-fmodule-name=PINRemoteImage",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "iOS_acknowledgement",
  deps = [],
  value = "//Vendor/PINRemoteImage/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "OSX_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OSX_public_hdrs",
  srcs = [
    ":Core_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OSX_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OSX_union_hdrs",
  srcs = [
    "OSX_hdrs",
    "PINRemoteImage_hdrs",
    ":Core_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "OSX_hmap",
  namespace = "PINRemoteImage",
  hdrs = [
    "PINRemoteImage_package_hdrs",
    ":OSX_union_hdrs"
  ],
  deps = [
    ":Core_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "OSX_includes",
  include = [
    "Vendor/PINRemoteImage/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "OSX",
  enable_modules = 1,
  hdrs = [
    ":OSX_hdrs"
  ],
  pch = "pod_support/Headers/Private/PINRemoteImage-prefix.pch",
  sdk_frameworks = [
    "Cocoa",
    "CoreServices"
  ],
  deps = [
    ":Core",
    ":OSX_includes"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/PINRemoteImage/pod_support/Headers/Public/PINRemoteImage/"
  ] + [
    "-fmodule-name=PINRemoteImage",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "OSX_acknowledgement",
  deps = [],
  value = "//Vendor/PINRemoteImage/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "tvOS_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "tvOS_public_hdrs",
  srcs = [
    ":iOS_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "tvOS_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "tvOS_union_hdrs",
  srcs = [
    "tvOS_hdrs",
    "PINRemoteImage_hdrs",
    ":iOS_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "tvOS_hmap",
  namespace = "PINRemoteImage",
  hdrs = [
    "PINRemoteImage_package_hdrs",
    ":tvOS_union_hdrs"
  ],
  deps = [
    ":iOS_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "tvOS_includes",
  include = [
    "Vendor/PINRemoteImage/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "tvOS",
  enable_modules = 1,
  hdrs = [
    ":tvOS_hdrs"
  ],
  pch = "pod_support/Headers/Private/PINRemoteImage-prefix.pch",
  deps = [
    ":iOS",
    ":tvOS_includes"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/PINRemoteImage/pod_support/Headers/Public/PINRemoteImage/"
  ] + [
    "-fmodule-name=PINRemoteImage",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "tvOS_acknowledgement",
  deps = [],
  value = "//Vendor/PINRemoteImage/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "WebP_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WebP_public_hdrs",
  srcs = [
    ":Core_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WebP_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WebP_union_hdrs",
  srcs = [
    "WebP_hdrs",
    "PINRemoteImage_hdrs",
    ":Core_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "WebP_hmap",
  namespace = "PINRemoteImage",
  hdrs = [
    "PINRemoteImage_package_hdrs",
    ":WebP_union_hdrs"
  ],
  deps = [
    "//Vendor/libwebp:libwebp",
    ":Core_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "WebP_includes",
  include = [
    "Vendor/PINRemoteImage/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "WebP",
  enable_modules = 1,
  hdrs = [
    ":WebP_hdrs"
  ],
  pch = "pod_support/Headers/Private/PINRemoteImage-prefix.pch",
  deps = [
    "//Vendor/libwebp:libwebp",
    ":Core",
    ":WebP_includes"
  ],
  copts = [
    "-fobjc-weak",
    "-DPIN_WEBP=1",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/PINRemoteImage/pod_support/Headers/Public/PINRemoteImage/"
  ] + [
    "-fmodule-name=PINRemoteImage",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "WebP_acknowledgement",
  deps = [
    "//Vendor/libwebp:libwebp_acknowledgement"
  ],
  value = "//Vendor/PINRemoteImage/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "PINCache_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "Source/Classes/PINCache/*.h",
      "Source/Classes/include/PINCache+PINRemoteImageCaching.h"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PINCache_public_hdrs",
  srcs = glob(
    [
      "Source/Classes/PINCache/*.h",
      "Source/Classes/include/PINCache+PINRemoteImageCaching.h"
    ]
  ) + [
    ":Core_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PINCache_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "Source/Classes/PINCache/*.h",
      "Source/Classes/include/PINCache+PINRemoteImageCaching.h"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PINCache_union_hdrs",
  srcs = [
    "PINCache_hdrs",
    "PINRemoteImage_hdrs",
    ":Core_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "PINCache_hmap",
  namespace = "PINRemoteImage",
  hdrs = [
    "PINRemoteImage_package_hdrs",
    ":PINCache_union_hdrs"
  ],
  deps = [
    "//Vendor/PINCache:PINCache",
    ":Core_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "PINCache_includes",
  include = [
    "Vendor/PINRemoteImage/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "PINCache",
  enable_modules = 1,
  srcs = glob(
    [
      "Source/Classes/PINCache/*.m"
    ],
    exclude = glob(
      [
        "Source/Classes/**/*.m"
      ],
      exclude = [
        "Source/Classes/PINCache/*.m"
      ]
    )
  ),
  hdrs = [
    ":PINCache_hdrs"
  ],
  pch = "pod_support/Headers/Private/PINRemoteImage-prefix.pch",
  deps = [
    "//Vendor/PINCache:PINCache",
    ":Core",
    ":PINCache_includes"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/PINRemoteImage/pod_support/Headers/Public/PINRemoteImage/"
  ] + [
    "-fmodule-name=PINRemoteImage",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "PINCache_acknowledgement",
  deps = [
    "//Vendor/PINCache:PINCache_acknowledgement"
  ],
  value = "//Vendor/PINRemoteImage/pod_support_buildable:acknowledgement_fragment"
)