
load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap",
  "umbrella_header"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "IGListKit_package_hdrs",
  srcs = [
    "IGListKit_cxx_direct_hdrs",
    "IGListKit_direct_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IGListKit_cxx_direct_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListKit/IGListKit.h"
        ]
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IGListKit_cxx_public_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h"
        ],
        exclude = [
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":osxCase": glob(
        [
          "Source/IGListKit/IGListKit.h"
        ]
      ),
      ":tvosCase": glob(
        [
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h"
        ],
        exclude = [
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IGListKit_cxx_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListKit/IGListKit.h"
        ]
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IGListKit_cxx_union_hdrs",
  srcs = [
    "IGListKit_cxx_hdrs",
    "IGListKit_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "IGListKit_cxx_hmap",
  namespace = "IGListKit",
  hdrs = [
    "IGListKit_package_hdrs",
    ":IGListKit_cxx_union_hdrs"
  ],
  deps = [
    "//Vendor/IGListDiffKit:IGListDiffKit"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "IGListKit_cxx_includes",
  include = [
    "Vendor/IGListKit/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "IGListKit_cxx",
  enable_modules = 1,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Source/IGListKit/**/*.mm"
        ],
        exclude = [
          "Source/IGListKit/**/*.m"
        ]
      ),
      ":tvosCase": glob(
        [
          "Source/IGListKit/**/*.mm"
        ],
        exclude = [
          "Source/IGListKit/**/*.m"
        ]
      )
    }
  ),
  module_map = ":IGListKit_module_map",
  hdrs = [
    ":IGListKit_cxx_hdrs"
  ],
  pch = "pod_support/Headers/Private/IGListKit-prefix.pch",
  sdk_frameworks = select(
    {
      "//conditions:default": [
        "UIKit"
      ],
      ":osxCase": [
        "Cocoa"
      ],
      ":tvosCase": [
        "UIKit"
      ]
    }
  ),
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    "//Vendor/IGListDiffKit:IGListDiffKit",
    ":IGListKit_cxx_includes",
    ":IGListKit_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/IGListKit/",
    "-std=c++14",
    "-std=c++11",
    "-stdlib=libc++",
    "-fmodules",
    "-fcxx-modules",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/IGListKit/pod_support/Headers/Public/IGListKit/"
  ] + [
    "-fmodule-name=IGListKit",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "IGListKit_cxx_acknowledgement",
  deps = [
    "//Vendor/IGListDiffKit:IGListDiffKit_acknowledgement"
  ],
  value = "//Vendor/IGListKit/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "IGListKit_direct_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListKit/IGListKit.h"
        ]
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IGListKit_public_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h"
        ],
        exclude = [
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":osxCase": glob(
        [
          "Source/IGListKit/IGListKit.h"
        ]
      ),
      ":tvosCase": glob(
        [
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h"
        ],
        exclude = [
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      )
    }
  ) + [
    ":IGListKit_cxx_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IGListKit_hdrs",
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":osxCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListKit/IGListKit.h"
        ]
      ),
      ":tvosCase": glob(
        [
          "pod_support/Headers/Public/**/*",
          "Source/IGListDiffKit/Internal/*.h",
          "Source/IGListKit/**/*.h",
          "Source/IGListKit/Internal/*.h"
        ]
      ),
      ":watchosCase": glob(
        [
          "pod_support/Headers/Public/**/*"
        ]
      )
    }
  ) + [
    ":IGListKit_cxx_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "IGListKit_hmap",
  namespace = "IGListKit",
  hdrs = [
    "IGListKit_package_hdrs",
    ":IGListKit_hdrs"
  ],
  deps = [
    "//Vendor/IGListDiffKit:IGListDiffKit",
    ":IGListKit_cxx_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "IGListKit_includes",
  include = [
    "Vendor/IGListKit/pod_support/Headers/Public/"
  ]
)
objc_library(
  name = "IGListKit",
  enable_modules = 1,
  srcs = select(
    {
      "//conditions:default": glob(
        [
          "Source/IGListKit/**/*.m"
        ]
      ),
      ":tvosCase": glob(
        [
          "Source/IGListKit/**/*.m"
        ]
      )
    }
  ),
  module_map = ":IGListKit_module_map",
  hdrs = [
    ":IGListKit_hdrs"
  ],
  pch = "pod_support/Headers/Private/IGListKit-prefix.pch",
  sdk_frameworks = select(
    {
      "//conditions:default": [
        "UIKit"
      ],
      ":osxCase": [
        "Cocoa"
      ],
      ":tvosCase": [
        "UIKit"
      ]
    }
  ),
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    "//Vendor/IGListDiffKit:IGListDiffKit",
    ":IGListKit_cxx",
    ":IGListKit_includes",
    ":IGListKit_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/IGListKit/",
    "-fobjc-weak",
    "-fmodules",
    "-fcxx-modules",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-IVendor/IGListKit/pod_support/Headers/Public/IGListKit/"
  ] + [
    "-fmodule-name=IGListKit",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "IGListKit_acknowledgement",
  deps = [
    "//Vendor/IGListDiffKit:IGListDiffKit_acknowledgement"
  ],
  value = "//Vendor/IGListKit/pod_support_buildable:acknowledgement_fragment"
)
gen_module_map(
  name = "IGListKit_module_map",
  module_name = "IGListKit",
  hdrs = [
    "IGListKit_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)